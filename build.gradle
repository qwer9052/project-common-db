buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}
plugins {
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
//    id "org.jetbrains.kotlin.jvm" version "1.5.10"  // Kotlin 플러그인 추가
//    id "org.jetbrains.kotlin.kapt" version "1.5.10"  // kapt 플러그인 추가
}

// (3) QClass 생성 위치
def querydslDir = "$buildDir/generated/querydsl"
//
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
//
// (4) QClass 소스 위치를 지정합니다.
sourceSets {
    main.java.srcDir querydslDir
}

// (5) gradle 5.0 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//// (5) gradle 5.0 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

dependencies {
    runtimeOnly group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api group: 'com.querydsl', name: 'querydsl-codegen', version: '5.0.0'

//Querydsl 추가

    api 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    api "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

repositories {
    mavenCentral()
}

//jar로 패키징시 Q클래스를 포함시키기 위함
tasks.named('sourcesJar') {
    mustRunAfter ':project-common-db:compileQuerydsl'
}

// 서버 시작 시 q클래스 폴더 삭제
tasks.withType(JavaExec) {
    if(file(querydslDir).exists())
        delete(file(querydslDir))
}


